on:
  workflow_dispatch:
  push:
    branches:
      - main
      - buidGridset
  pull_request:

jobs:
  build:
    runs-on: windows-latest      
    steps:
    - uses: actions/checkout@v3
    - name: setup-msbuild
      uses: microsoft/setup-msbuild@v1
    - name: Set up Python 3.11.4
      uses: actions/setup-python@v4.7.1
      with:
        python-version: "3.11.4"
    - name: Install poetry
      uses: abatilo/actions-poetry@v2
    - name: Install dependencies
      run: |
        poetry install
    - name: Replace Encryption Key in Multiple Files
      shell: powershell
      run: |
        # Fetch the encryption key from GitHub secrets
        $encryptionKey = "${{ secrets.CONFIG_ENCRYPTION_KEY }}"

        # Define paths to the files that need updating
        $filePaths = @("configure_enc_utils.py")

        # Loop through each file path and replace the placeholder with the actual encryption key
        foreach ($filePath in $filePaths) {
          if (Test-Path $filePath) {
            # Read the file content
            $fileContent = Get-Content $filePath

            # Replace the placeholder with the actual encryption key
            $updatedContent = $fileContent -replace "YOUR_ENCRYPTION_KEY", $encryptionKey

            # Write the updated content back to the file
            Set-Content $filePath -Value $updatedContent
            Write-Output "Replaced encryption key in $filePath"
          } else {
            Write-Output "File not found: $filePath"
          }
        }
      env:
        CONFIG_ENCRYPTION_KEY: ${{ secrets.CONFIG_ENCRYPTION_KEY }}          
    - name: Inject secrets into environment and encrypt config
      shell: bash
      run: |
        poetry run python configure_enc_utils.py -use-env
      env:
        MICROSOFT_TOKEN: ${{ secrets.MICROSOFT_TOKEN }}
        MICROSOFT_REGION: ${{ secrets.MICROSOFT_REGION }}
        GOOGLE_CREDS_JSON: ${{ secrets.GOOGLE_CREDS_JSON }}
        MICROSOFT_TOKEN_TRANS: ${{ secrets.MICROSOFT_TOKEN_TRANS }}
        CONFIG_ENCRYPTION_KEY: ${{ secrets.CONFIG_ENCRYPTION_KEY }} 
    - name: Build Apps
      run: |
        poetry run python -c "import site; print(site.getsitepackages()[0])"
        .\build_executable.bat
      env:
        CONFIG_ENCRYPTION_KEY: ${{ secrets.CONFIG_ENCRYPTION_KEY }}
        MICROSOFT_TOKEN: ${{ secrets.MICROSOFT_TOKEN }}
        MICROSOFT_REGION: ${{ secrets.MICROSOFT_REGION }}
        GOOGLE_CREDS_JSON: ${{ secrets.GOOGLE_CREDS_JSON }}
        MICROSOFT_TOKEN_TRANS: ${{ secrets.MICROSOFT_TOKEN_TRANS }}
    - name: Upload Installer
      uses: actions/upload-artifact@v3
      with:
        name: 'Windows Release'
        path: 'Output\AACSpeakHelper.exe'
