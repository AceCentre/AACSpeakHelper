on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: windows-latest      
    steps:
      - uses: actions/checkout@v3
      - name: setup-msbuild
        uses: microsoft/setup-msbuild@v1
      - name: Set up Python 3.11.4
        uses: actions/setup-python@v4.7.1
        with:
          python-version: "3.11.4"
      - name: Install poetry
        uses: abatilo/actions-poetry@v2
      - name: Install dependencies
        run: |
          poetry install
      - name: Inject secrets into environment and encrypt config
        shell: bash
        run: |
          poetry run python encrypt_config.py
        env:
          MICROSOFT_TOKEN: ${{ secrets.MICROSOFT_TOKEN }}
          MICROSOFT_REGION: ${{ secrets.MICROSOFT_REGION }}
          GOOGLE_CREDS_JSON: ${{ secrets.GOOGLE_CREDS_JSON }}
          MICROSOFT_TOKEN_TRANS: ${{ secrets.MICROSOFT_TOKEN_TRANS }}
          CONFIG_ENCRYPTION_KEY: ${{ secrets.CONFIG_ENCRYPTION_KEY }} 
        - name: Build Apps
        run: |
          poetry run python -c "import site; print(site.getsitepackages()[0])"
          .\build_executable.bat
        env:
          MICROSOFT_TOKEN: ${{ secrets.MICROSOFT_TOKEN }}
          MICROSOFT_REGION: ${{ secrets.MICROSOFT_REGION }}
          GOOGLE_CREDS_JSON: ${{ secrets.GOOGLE_CREDS_JSON }}
          MICROSOFT_TOKEN_TRANS: ${{ secrets.MICROSOFT_TOKEN_TRANS }}
      - name: Verify Output Directory
        run: |
          dir Output
      - name: Upload Installer
        uses: actions/upload-artifact@v4
        with:
          name: 'Windows Release'
          path: 'Output\AACSpeakHelper.exe'
  
  sign:
    runs-on: self-hosted
    needs: build
    env:
      # Convenience variables with v prefix and short name.
      VersionTag: v${{github.ref_name}}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: 'Windows Release'
          path: Output
      - name: Verify Downloaded Artifact
        run: |
          dir Output
      - name: Sign Executable
        run: signtool sign /tr http://timestamp.digicert.com /td sha256 /fd sha256 /a ./Output/AACSpeakHelper.exe
      - name: Rename Executable
        run: |
          REN Output\AACSpeakHelper.exe AACSpeakHelper-${{env.VersionTag}}.exe
      - name: Upload Signed Executable
        uses: actions/upload-artifact@v4
        with:
          name: SignedInstaller
          path: Output
          retention-days: 1

  release:
    runs-on: self-hosted
    needs: sign
    env:
      # Convenience variables with v prefix and short name.
      VersionTag: v${{github.ref_name}}
    steps:
      - name: Create tag
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/${{env.VersionTag}}",
              sha: context.sha
            })
      - uses: actions/download-artifact@v4
        with:
          name: SignedInstaller
          path: Output
      - name: release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{env.VersionTag}}
          name: ${{env.VersionTag}}
          draft: false
          prerelease: false
          fail_on_unmatched_files: true
          files: |
            Output/AACSpeakHelper-${{env.VersionTag}}.exe
